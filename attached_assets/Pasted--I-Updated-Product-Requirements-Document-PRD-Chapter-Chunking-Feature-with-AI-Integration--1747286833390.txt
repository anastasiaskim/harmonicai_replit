**I. Updated Product Requirements Document (PRD): Chapter Chunking Feature with AI Integration**

**1. Introduction**

- **Purpose:** This document outlines the requirements for implementing an AI-enhanced "Chapter Chunking" feature within the Narrator Studio. This feature will leverage Google AI Studio and Gemini 2.0 Flash to automatically divide an ebook in .txt format into individual chapter files with improved accuracy.
- **Goal:** To provide a highly reliable and automated process for separating ebook content into chapters, streamlining the audiobook creation workflow, even for books with unconventional chapter headings.

**2. Goals**

- **Primary:** Accurately divide a .txt ebook file into chapter files using AI-powered chapter heading detection.
- **Secondary:** Provide users with a clear indication of successful chunking and the confidence level of the AI.
- **Tertiary:** Allow users to manually review and correct chapter headings identified by the AI.

**3. Target Audience**

- Users of Narrator Studio who upload .txt ebooks.

**4. User Stories**

- As a user, I want to upload a .txt ebook, and the system should use AI to intelligently identify chapter headings and divide the content accordingly.
- As a user, I want to see the AI's confidence level for each detected chapter heading, so I can assess its accuracy.
- As a user, I want to be able to manually review and correct the chapter headings identified by the AI before the book is chunked.
- As a user, I want to be notified when the chunking process is completed successfully, and whether it was fully automatic or required manual intervention.
- As a user, I want the chapter names/titles to be automatically generated from the chapter headings, and I can edit these generated titles.
- As a user, if the AI is unable to confidently identify chapter headings, I want to be notified and given clear instructions on how to proceed manually.
- As a user, I want to download the chunked chapters as individual .txt files.

**5. Functional Requirements**

- **Input:** The system must accept a .txt file containing the complete ebook content. The system must also allow the Google AI Studio API key to be uploaded.
- **AI Chapter Heading Detection:** The system must use the Google AI Studio API (Gemini 2.0 Flash) to identify chapter headings within the .txt file. The AI prompt should be carefully designed to maximize accuracy.
- **Confidence Level:** The system must display a confidence level for each detected chapter heading, as provided (or calculated) by the AI.
- **Manual Review and Correction:** The system must provide a user interface for reviewing and correcting the chapter headings identified by the AI. This interface should allow users to:
    - Edit chapter headings.
    - Add or remove chapter breaks.
    - Adjust chapter heading names.
- **Chapter File Creation:** The system must create individual .txt files for each detected chapter (either automatically or manually corrected).
- **Naming Convention:** The chapter files should be named based on the (potentially edited) chapter heading. If a heading is not found or not parsable, use a default naming scheme (e.g., "Chapter 1.txt", "Chapter 2.txt").
- **Output:** The system should provide a zip file containing all the extracted chapter txt files.
- **Error Handling:** If the system fails to connect to the Google AI Studio API or encounters an error during processing, it should display an appropriate error message.

**6. Non-Functional Requirements**

- **Performance:**
    - Chapter chunking using AI should be completed within a reasonable timeframe (e.g., less than 90 seconds for a typical ebook).
    - The UI for manual review and correction should be responsive and easy to use.
- **Reliability:** The AI-powered chapter heading detection must be highly reliable. The system must gracefully handle errors and provide informative feedback to the user.
- **Scalability:** The system should be able to handle ebooks of varying sizes (up to a reasonable limit).
- **Security:** Protect user data, uploaded ebook content, and Google AI Studio API keys. The API key should be securely stored and not exposed to the client-side code.
- **API Key Management:** The system must securely store and manage the user's Google AI Studio API key, associating it with their account.

**7. Acceptance Criteria**

- The system accurately detects chapter headings in a .txt ebook using AI (Gemini 2.0 Flash), with a high success rate.
- The AI confidence level is displayed for each detected chapter heading.
- The user can manually review and correct chapter headings.
- Chapter files are named correctly based on chapter headings.
- The user receives clear notification upon successful completion or failure.
- Error messages are displayed appropriately in case of errors.
- The chunking process performs within acceptable time limits.
- The Google AI Studio API key is securely stored and managed.

**8. Future Considerations (Out of Scope for MVP)**

- Support for different ebook formats (EPUB, MOBI).
- Advanced AI prompt customization options.
- Integration with other AI models.
- Automated chapter summary generation using AI.